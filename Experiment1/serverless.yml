service: go-crud-serverless

frameworkVersion: '>=2.0.0'

useDotenv: true

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "eu-central-1"}
  stackTags: 
    Application: WebApiLambda
    Name: WebApiLambda
  iamRoleStatements:
    - Effect: Allow
      Action:
        - rds:*
        - dynamodb:BatchGetItem
        - dynamodb:Scan
        - dynamodb:DeleteItem
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"


  # environment:
  #   PG_HOST: ${env:PG_HOST}
  #   PG_DB: ${env:PG_DB}
  #   PG_PORT: ${env:PG_PORT}
  #   PG_USER: ${env:PG_USER}
  #   PG_PASSWORD: ${env:PG_PASSWORD}

    
package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  getUsers:
    memorySize: 256
    handler: bin/main
    events:
      - http:
          path: /users
          method: get
          cors: true
  createUser:
    memorySize: 256
    handler: bin/main
    events:
      - http:
          path: /users
          method: post
          cors: true
  updateUser:
    memorySize: 256
    handler: bin/main
    events:
      - http:
          path: /users/{id}
          method: put
          cors: true
  deleteUser:
    memorySize: 256
    handler: bin/main
    events:
      - http:
          path: /users/{id}
          method: delete
          cors: true


resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: lambda-users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        # ProvisionedThroughput:
        #   ReadCapacityUnits: 1
        #   WriteCapacityUnits: 1